<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="BFBOTDataSet" targetNamespace="http://tempuri.org/BFBOTDataSet.xsd" xmlns:mstns="http://tempuri.org/BFBOTDataSet.xsd" xmlns="http://tempuri.org/BFBOTDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="BFBOTConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="BFBOTConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DesktopInterface.Properties.Settings.GlobalReference.Default.BFBOTConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CoursesTableAdapter" GeneratorDataComponentClassName="CoursesTableAdapter" Name="Courses" UserDataComponentName="CoursesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BFBOTConnectionString (Settings)" DbObjectName="BFBOT.dbo.Courses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Courses] WHERE (([CourseID] = @Original_CourseID) AND ([CourseCode] = @Original_CourseCode) AND ([CourseName] = @Original_CourseName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_CourseCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="CourseCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CourseName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Courses] ([CourseCode], [CourseName]) VALUES (@CourseCode, @CourseName);
SELECT CourseID, CourseCode, CourseName FROM Courses WHERE (CourseID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@CourseCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="CourseCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CourseName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CourseID, CourseCode, CourseName FROM dbo.Courses</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Courses] SET [CourseCode] = @CourseCode, [CourseName] = @CourseName WHERE (([CourseID] = @Original_CourseID) AND ([CourseCode] = @Original_CourseCode) AND ([CourseName] = @Original_CourseName));
SELECT CourseID, CourseCode, CourseName FROM Courses WHERE (CourseID = @CourseID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@CourseCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="CourseCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CourseName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CourseID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_CourseCode" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="CourseCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CourseName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CourseName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="CourseID" ColumnName="CourseID" DataSourceName="BFBOT.dbo.Courses" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@CourseID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="CourseID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CourseID" DataSetColumn="CourseID" />
              <Mapping SourceColumn="CourseCode" DataSetColumn="CourseCode" />
              <Mapping SourceColumn="CourseName" DataSetColumn="CourseName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MarketItemsTableAdapter" GeneratorDataComponentClassName="MarketItemsTableAdapter" Name="MarketItems" UserDataComponentName="MarketItemsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BFBOTConnectionString (Settings)" DbObjectName="BFBOT.dbo.MarketItems" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MarketItems] ([MarketID], [MarketItemName], [MarketItemState]) VALUES (@MarketID, @MarketItemName, @MarketItemState)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MarketID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MarketID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MarketItemName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MarketItemName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MarketItemState" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MarketItemState" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MarketItemID, MarketID, MarketItemName, MarketItemState FROM dbo.MarketItems</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MarketItemID" DataSetColumn="MarketItemID" />
              <Mapping SourceColumn="MarketID" DataSetColumn="MarketID" />
              <Mapping SourceColumn="MarketItemName" DataSetColumn="MarketItemName" />
              <Mapping SourceColumn="MarketItemState" DataSetColumn="MarketItemState" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MarketMovementsTableAdapter" GeneratorDataComponentClassName="MarketMovementsTableAdapter" Name="MarketMovements" UserDataComponentName="MarketMovementsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BFBOTConnectionString (Settings)" DbObjectName="BFBOT.dbo.MarketMovements" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MarketMovements] ([MarketID], [MarketItemID], [UpdateTimeStamp], [BackPrice], [BackAmount], [LayPrice], [LayAmount], [InPlay]) VALUES (@MarketID, @MarketItemID, @UpdateTimeStamp, @BackPrice, @BackAmount, @LayPrice, @LayAmount, @InPlay)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MarketID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MarketID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MarketItemID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MarketItemID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UpdateTimeStamp" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UpdateTimeStamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@BackPrice" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="BackPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@BackAmount" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="BackAmount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@LayPrice" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="LayPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@LayAmount" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="LayAmount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@InPlay" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InPlay" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MovementID, MarketID, MarketItemID, UpdateTimeStamp, BackPrice, BackAmount, LayPrice, LayAmount, InPlay FROM dbo.MarketMovements</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MovementID" DataSetColumn="MovementID" />
              <Mapping SourceColumn="MarketID" DataSetColumn="MarketID" />
              <Mapping SourceColumn="MarketItemID" DataSetColumn="MarketItemID" />
              <Mapping SourceColumn="UpdateTimeStamp" DataSetColumn="UpdateTimeStamp" />
              <Mapping SourceColumn="BackPrice" DataSetColumn="BackPrice" />
              <Mapping SourceColumn="BackAmount" DataSetColumn="BackAmount" />
              <Mapping SourceColumn="LayPrice" DataSetColumn="LayPrice" />
              <Mapping SourceColumn="LayAmount" DataSetColumn="LayAmount" />
              <Mapping SourceColumn="InPlay" DataSetColumn="InPlay" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MarketsTableAdapter" GeneratorDataComponentClassName="MarketsTableAdapter" Name="Markets" UserDataComponentName="MarketsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BFBOTConnectionString (Settings)" DbObjectName="BFBOT.dbo.Markets" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Markets] ([BFMarketID], [MarketName], [MarketCloseTime], [MarketState]) VALUES (@BFMarketID, @MarketName, @MarketCloseTime, @MarketState)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BFMarketID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BFMarketID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MarketName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MarketName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MarketCloseTime" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MarketCloseTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MarketState" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MarketState" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MarketID, BFMarketID, MarketName, MarketCloseTime, MarketState FROM dbo.Markets</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MarketID" DataSetColumn="MarketID" />
              <Mapping SourceColumn="BFMarketID" DataSetColumn="BFMarketID" />
              <Mapping SourceColumn="MarketName" DataSetColumn="MarketName" />
              <Mapping SourceColumn="MarketCloseTime" DataSetColumn="MarketCloseTime" />
              <Mapping SourceColumn="MarketState" DataSetColumn="MarketState" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="BFBOTDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="BFBOTDataSet" msprop:Generator_UserDSName="BFBOTDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Courses" msprop:Generator_TableClassName="CoursesDataTable" msprop:Generator_TableVarName="tableCourses" msprop:Generator_TablePropName="Courses" msprop:Generator_RowDeletingName="CoursesRowDeleting" msprop:Generator_RowChangingName="CoursesRowChanging" msprop:Generator_RowEvHandlerName="CoursesRowChangeEventHandler" msprop:Generator_RowDeletedName="CoursesRowDeleted" msprop:Generator_UserTableName="Courses" msprop:Generator_RowChangedName="CoursesRowChanged" msprop:Generator_RowEvArgName="CoursesRowChangeEvent" msprop:Generator_RowClassName="CoursesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CourseID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnCourseID" msprop:Generator_ColumnPropNameInRow="CourseID" msprop:Generator_ColumnPropNameInTable="CourseIDColumn" msprop:Generator_UserColumnName="CourseID" type="xs:int" />
              <xs:element name="CourseCode" msprop:Generator_ColumnVarNameInTable="columnCourseCode" msprop:Generator_ColumnPropNameInRow="CourseCode" msprop:Generator_ColumnPropNameInTable="CourseCodeColumn" msprop:Generator_UserColumnName="CourseCode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CourseName" msprop:Generator_ColumnVarNameInTable="columnCourseName" msprop:Generator_ColumnPropNameInRow="CourseName" msprop:Generator_ColumnPropNameInTable="CourseNameColumn" msprop:Generator_UserColumnName="CourseName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MarketItems" msprop:Generator_TableClassName="MarketItemsDataTable" msprop:Generator_TableVarName="tableMarketItems" msprop:Generator_TablePropName="MarketItems" msprop:Generator_RowDeletingName="MarketItemsRowDeleting" msprop:Generator_RowChangingName="MarketItemsRowChanging" msprop:Generator_RowEvHandlerName="MarketItemsRowChangeEventHandler" msprop:Generator_RowDeletedName="MarketItemsRowDeleted" msprop:Generator_UserTableName="MarketItems" msprop:Generator_RowChangedName="MarketItemsRowChanged" msprop:Generator_RowEvArgName="MarketItemsRowChangeEvent" msprop:Generator_RowClassName="MarketItemsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MarketItemID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnMarketItemID" msprop:Generator_ColumnPropNameInRow="MarketItemID" msprop:Generator_ColumnPropNameInTable="MarketItemIDColumn" msprop:Generator_UserColumnName="MarketItemID" type="xs:int" />
              <xs:element name="MarketID" msprop:Generator_ColumnVarNameInTable="columnMarketID" msprop:Generator_ColumnPropNameInRow="MarketID" msprop:Generator_ColumnPropNameInTable="MarketIDColumn" msprop:Generator_UserColumnName="MarketID" type="xs:int" />
              <xs:element name="MarketItemName" msprop:Generator_ColumnVarNameInTable="columnMarketItemName" msprop:Generator_ColumnPropNameInRow="MarketItemName" msprop:Generator_ColumnPropNameInTable="MarketItemNameColumn" msprop:Generator_UserColumnName="MarketItemName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MarketItemState" msprop:Generator_ColumnVarNameInTable="columnMarketItemState" msprop:Generator_ColumnPropNameInRow="MarketItemState" msprop:Generator_ColumnPropNameInTable="MarketItemStateColumn" msprop:Generator_UserColumnName="MarketItemState">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MarketMovements" msprop:Generator_TableClassName="MarketMovementsDataTable" msprop:Generator_TableVarName="tableMarketMovements" msprop:Generator_TablePropName="MarketMovements" msprop:Generator_RowDeletingName="MarketMovementsRowDeleting" msprop:Generator_RowChangingName="MarketMovementsRowChanging" msprop:Generator_RowEvHandlerName="MarketMovementsRowChangeEventHandler" msprop:Generator_RowDeletedName="MarketMovementsRowDeleted" msprop:Generator_UserTableName="MarketMovements" msprop:Generator_RowChangedName="MarketMovementsRowChanged" msprop:Generator_RowEvArgName="MarketMovementsRowChangeEvent" msprop:Generator_RowClassName="MarketMovementsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MovementID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnMovementID" msprop:Generator_ColumnPropNameInRow="MovementID" msprop:Generator_ColumnPropNameInTable="MovementIDColumn" msprop:Generator_UserColumnName="MovementID" type="xs:int" />
              <xs:element name="MarketID" msprop:Generator_ColumnVarNameInTable="columnMarketID" msprop:Generator_ColumnPropNameInRow="MarketID" msprop:Generator_ColumnPropNameInTable="MarketIDColumn" msprop:Generator_UserColumnName="MarketID" type="xs:int" />
              <xs:element name="MarketItemID" msprop:Generator_ColumnVarNameInTable="columnMarketItemID" msprop:Generator_ColumnPropNameInRow="MarketItemID" msprop:Generator_ColumnPropNameInTable="MarketItemIDColumn" msprop:Generator_UserColumnName="MarketItemID" type="xs:int" />
              <xs:element name="UpdateTimeStamp" msprop:Generator_ColumnVarNameInTable="columnUpdateTimeStamp" msprop:Generator_ColumnPropNameInRow="UpdateTimeStamp" msprop:Generator_ColumnPropNameInTable="UpdateTimeStampColumn" msprop:Generator_UserColumnName="UpdateTimeStamp">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BackPrice" msprop:Generator_ColumnVarNameInTable="columnBackPrice" msprop:Generator_ColumnPropNameInRow="BackPrice" msprop:Generator_ColumnPropNameInTable="BackPriceColumn" msprop:Generator_UserColumnName="BackPrice" type="xs:decimal" />
              <xs:element name="BackAmount" msprop:Generator_ColumnVarNameInTable="columnBackAmount" msprop:Generator_ColumnPropNameInRow="BackAmount" msprop:Generator_ColumnPropNameInTable="BackAmountColumn" msprop:Generator_UserColumnName="BackAmount" type="xs:decimal" />
              <xs:element name="LayPrice" msprop:Generator_ColumnVarNameInTable="columnLayPrice" msprop:Generator_ColumnPropNameInRow="LayPrice" msprop:Generator_ColumnPropNameInTable="LayPriceColumn" msprop:Generator_UserColumnName="LayPrice" type="xs:decimal" />
              <xs:element name="LayAmount" msprop:Generator_ColumnVarNameInTable="columnLayAmount" msprop:Generator_ColumnPropNameInRow="LayAmount" msprop:Generator_ColumnPropNameInTable="LayAmountColumn" msprop:Generator_UserColumnName="LayAmount" type="xs:decimal" />
              <xs:element name="InPlay" msprop:Generator_ColumnVarNameInTable="columnInPlay" msprop:Generator_ColumnPropNameInRow="InPlay" msprop:Generator_ColumnPropNameInTable="InPlayColumn" msprop:Generator_UserColumnName="InPlay" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Markets" msprop:Generator_TableClassName="MarketsDataTable" msprop:Generator_TableVarName="tableMarkets" msprop:Generator_TablePropName="Markets" msprop:Generator_RowDeletingName="MarketsRowDeleting" msprop:Generator_RowChangingName="MarketsRowChanging" msprop:Generator_RowEvHandlerName="MarketsRowChangeEventHandler" msprop:Generator_RowDeletedName="MarketsRowDeleted" msprop:Generator_UserTableName="Markets" msprop:Generator_RowChangedName="MarketsRowChanged" msprop:Generator_RowEvArgName="MarketsRowChangeEvent" msprop:Generator_RowClassName="MarketsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MarketID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnMarketID" msprop:Generator_ColumnPropNameInRow="MarketID" msprop:Generator_ColumnPropNameInTable="MarketIDColumn" msprop:Generator_UserColumnName="MarketID" type="xs:int" />
              <xs:element name="BFMarketID" msprop:Generator_ColumnVarNameInTable="columnBFMarketID" msprop:Generator_ColumnPropNameInRow="BFMarketID" msprop:Generator_ColumnPropNameInTable="BFMarketIDColumn" msprop:Generator_UserColumnName="BFMarketID" type="xs:int" />
              <xs:element name="MarketName" msprop:Generator_ColumnVarNameInTable="columnMarketName" msprop:Generator_ColumnPropNameInRow="MarketName" msprop:Generator_ColumnPropNameInTable="MarketNameColumn" msprop:Generator_UserColumnName="MarketName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MarketCloseTime" msprop:Generator_ColumnVarNameInTable="columnMarketCloseTime" msprop:Generator_ColumnPropNameInRow="MarketCloseTime" msprop:Generator_ColumnPropNameInTable="MarketCloseTimeColumn" msprop:Generator_UserColumnName="MarketCloseTime">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MarketState" msprop:Generator_ColumnVarNameInTable="columnMarketState" msprop:Generator_ColumnPropNameInRow="MarketState" msprop:Generator_ColumnPropNameInTable="MarketStateColumn" msprop:Generator_UserColumnName="MarketState">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Courses" />
      <xs:field xpath="mstns:CourseID" />
    </xs:unique>
  </xs:element>
</xs:schema>